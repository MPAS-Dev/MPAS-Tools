name: Conda Package CI/CD Build Workflow

on:
  push:
    branches:
      - master
    paths:
      - 'conda_package/**'
      - '.github/workflows/**'
      - 'mesh_tools/seaice_grid_tools/**'
      - 'mesh_tools/mesh_conversion_tools/**'
      - 'mesh_tools/mesh_conversion_tools_netcdf_c/**'

  pull_request:
    branches:
      - master
    paths:
      - 'conda_package/**'
      - '.github/workflows/**'
      - 'mesh_tools/seaice_grid_tools/**'
      - 'mesh_tools/mesh_conversion_tools/**'
      - 'mesh_tools/mesh_conversion_tools_netcdf_c/**'

  workflow_dispatch:

env:
  CANCEL_OTHERS: false
  PATHS_IGNORE: '["**/README.md", "**/docs/**"]'

jobs:
  pre-commit-hooks:
    name: lint with pre-commit
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - name: Checkout Code Repository
        uses: actions/checkout@v4

      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - id: file_changes
        uses: trilom/file-changes-action@1.2.4
        with:
          output: ' '

      - name: Install and Run Pre-commit
        uses: pre-commit/action@v3.0.1
        with:
          extra_args: --files ${{ steps.file_changes.outputs.files}}

  build:
    name: test mpas_tools - python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    timeout-minutes: 20
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - name: Create Build Environment
        uses: mamba-org/setup-micromamba@v2
        with:
          environment-name: mpas_tools_dev
          init-shell: bash
          condarc: |
            channel_priority: strict
            channels:
                - conda-forge
          create-args: >-
            python=${{ matrix.python-version }}

      - name: Finalize Build Environment
        run: |
          conda install conda conda-build
          conda build -m "conda_package/ci/linux_64_python${{ matrix.python-version }}.____cpython.yaml" "conda_package/recipe"

      - name: Install mpas_tools
        run: |
          conda install -y -c ${CONDA_PREFIX}/conda-bld/ \
            mpas_tools python=${{ matrix.python-version }} \
            sphinx mock sphinx_rtd_theme

      - name: Build Sphinx Docs
        run: |
          cd conda_package/docs
          DOCS_VERSION=test make versioned-html
          condarc: |
            channel_priority: strict
            channels:
                - conda-forge
          create-args: >-
            python=${{ matrix.python-version }}
