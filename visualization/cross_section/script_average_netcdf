#!/bin/tcsh

# This C Shell script uses nco commands to do the following:
#   1. Create a small netcdf file that only contains relevant grid variables.
#   2. Average timeslices within each output file.
#   3. Average among output files created in step 2.
# In step 2, output files already averaged will not be recomputed.
# Step 3 does not use nAverage to weight the average.  This is not a 
# problem if all output files use the same number of timeslices 
# (like 12 months in an annual file).
#
# The final product of this script is a single netcdf file named
#   total_avg_${lastFileName}
# (for example, total_avg_o.x5.NA.75km_15km.0029-02-01_00.00.00.nc)
# which contains grid information and all averaged variables, and 
# where ${lastFileName} is the final file used in averaging.

# LANL notes: 
# This script may be run from an interactive (llogin) node or using the 
# supplied msub scripts.  
#
# For the 15km (1.8M cells), I had to run on a mustang compute node
# (64GB, versus 24 or 32 on the others), and the averaging step (step 2)
# is limited to 16 timeslices in a file (18 fails).  Processing a
# 12-timeslice average took 8 minutes, so five years of monthly data
# would require about 40 minutes per variable.
#
# For all other runs, including the x5.NA.37.5km_7.5km (1.0M cells), I
# could run on conejo or lobo with no trouble, and it took 2 minutes
# to average each 10-slice file for one variable.

# Mark Petersen, MPAS-Ocean Team, LANL, April 2014

########################################################################
#
#  Specify variables and output files
#
########################################################################

# variables
set varList = ( avgZonalVelocity avgMeridionalVelocity )
# Possible variables of interest include: 
#set varList = ( avgNormalVelocity avgVertVelocityTop avgVelocityZonal avgVelocityMeridional temperature potentialDensity salinity uBolusGMZonal uBolusGMMeridional )

# This is the list of output files that averages should be computed from.
set outputFileList = o*00.nc

########################################################################
#
#  Machine specific paths
#
########################################################################

# On LANL machines like lobo and mapache, loading pgi library will
# load the correct libpgc.so. 
module purge
module load pgi

# Specify path of nco operators.
# The following paths work on LANL turquoise machines.
alias ncks '/usr/projects/cesm/software/conejo/nco/bin/ncks'
alias ncra '/usr/projects/cesm/software/conejo/nco/bin/ncra'
alias ncwa '/usr/projects/cesm/software/conejo/nco/bin/ncwa'
alias ncea '/usr/projects/cesm/software/conejo/nco/bin/ncea'

########################################################################
#
#  Begin main code.  Normally this does not need to change.
#
########################################################################

# Find the last output file
unalias ls
set lastFileName = `ls $outputFileList | tail -n 1`

# Step 1. Create small grid file.  This only needs to be done with one output file.'
echo 'Create file with grid variables from file:'$lastFileName
set newFile = total_avg_${lastFileName}
if ( -f $newFile ) then
   echo "    File $newFile exists.  Skipping grid file generation."
else
   echo "    File $newFile does not exists.  Generating grid file..."

   ncks -v nAverage,latVertex,lonVertex,verticesOnEdge,edgesOnVertex,refLayerThickness,dvEdge,latCell,lonCell,refBottomDepth,areaCell,xCell,yCell,zCell,xVertex,yVertex,zVertex,cellsOnVertex,maxLevelCell \
     $lastFileName $newFile
endif
echo

foreach varName ($varList)
   echo 'Processing variable '$varName':'

   foreach ncfile ($outputFileList)

      # Step 2. Average timeslices within a single file
      set newFile = ${ncfile}_${varName}_internal_avg.nc
      if ( -f $newFile ) then
         echo "    File $newFile exists.  Skipping internal averaging."
      else
         echo "    File $newFile does not exists.  Computing internal average..."

         ncwa -y avg -v $varName    -w nAverage -a Time    $ncfile $newFile
         ncwa -y ttl -v nAverage -a Time -A $ncfile $newFile
      endif

   end

   # Step 3. Average variable among grid files.
   # Note that this is not a weighted average.  If there are a different number 
   # of timeslices per file, this will not weight the average correctly.
   # I would like to change this to a weighted average, but don't know how at 
   # this point.

   set finalFile = total_avg_${lastFileName}
   echo "  Computing total average among files.  Appending to "$finalFile" (expect warnings for repeat dims)"
   ncea -y avg -v $varName    -A *_${varName}_internal_avg.nc $finalFile
   ncea -y ttl -v nAverage -A *_${varName}_internal_avg.nc $finalFile
   echo

end

echo "averaging_script complete!"
echo "Now copy file "$finalFile" to your local machine for visualization."


